#!/bin/sh
# Sub-tests that require a mounted partition.
set -e

. /usr/share/os-prober/common.sh

if [ "x$1" = xbtrfs ]; then
	types=btrfs
	if [ -z "$2" -o -z "$3" ]; then
		debug "missing btrfs parameters, exiting"
		exit 1
	fi
	UUID="$2"
	BTRFSDEV="$3"
else
	partition="$1"
	types="$(fs_type "$partition")" || types=NOT-DETECTED
fi

if [ "$types" = NOT-DETECTED ]; then
	debug "$1 type not recognised; skipping"
	exit 1
elif [ "x$types" = "x" ]; then
	exit 1
elif [ "$types" = LVM2_member ]; then
	debug "skipping LVM2 Volume Group on $partition"
	exit 1
elif [ "$types" = swap ]; then
	debug "$1 is a swap partition; skipping"
	exit 1
elif [ "$types" = crypto_LUKS ]; then
	debug "$1 is a LUKS partition; skipping"
	exit 1
elif [ "$types" = ntfs ]; then
	if type ntfs-3g >/dev/null 2>&1; then
		types='ntfs-3g ntfs'
	fi
elif [ -z "$types" ]; then
	if type cryptsetup >/dev/null 2>&1 && \
	   cryptsetup luksDump "$partition" >/dev/null 2>&1; then
		debug "$1 is a LUKS partition; skipping"
		exit 1
	fi
	for type in $(grep -v nodev /proc/filesystems); do
		# hfsplus filesystems are mountable as hfs. Try hfs last so
		# that we can tell the difference.
		if [ "$type" = hfs ]; then
			delaytypes="${delaytypes:+$delaytypes }$type"
		elif [ "$type" = fuseblk ]; then
			if type ntfs-3g >/dev/null 2>&1; then
				types="${types:+$types }ntfs-3g"
			fi
		else
			types="${types:+$types }$type"
		fi
	done
fi

tmpmnt=/var/lib/os-prober/mount
if [ ! -d "$tmpmnt" ]; then
	mkdir "$tmpmnt"
fi

mounted=

# all btrfs processing here.  Handle both unmounted and
# mounted subvolumes.
if [ "$types" = btrfs ]; then
	partition="$BTRFSDEV"
	debug "begin btrfs processing for $UUID"
	# note that the btrfs volume must not be mounted ro
	if mount -t btrfs -U "$UUID" "$tmpmnt"  2>/dev/null; then
		debug "btrfs volume $UUID mounted"
	else
		warn "cannot mount btrfs volume $UUID, exiting"
		rmdir "$tmpmnt" || true
		exit 1
	fi
	# besides regular subvols, get ro and snapshot so thet can be excluded
        subvols=$(btrfs subvolume list "$tmpmnt" | cut -d ' ' -f 9)
        rosubvols=$(btrfs subvolume list -r "$tmpmnt" | cut -d ' ' -f 9)
        sssubvols=$(btrfs subvolume list -s "$tmpmnt" | cut -d ' ' -f 9)
        if ! umount "$tmpmnt"; then
            warn "failed to umount btrfs volume on $tmpmnt"
            rmdir "$tmpmnt" || true
            exit 1
        fi
	if [ -z "$subvols" ]; then
		debug "no subvols found on btrfs volume $UUID"
		exit 1
	fi
	found=
        for subvol in $subvols; do
		debug "begin btrfs processing for $UUID subvol=$subvol"
		if echo "$rosubvols" | grep -q -x "$subvol"; then
			continue
		fi
		if echo "$sssubvols" | grep -q -x "$subvol"; then
			continue
		fi
		mounted=
		mpoint="$(grep btrfs /proc/self/mountinfo | grep "$partition " | grep "/$subvol " | cut -d ' ' -f 5)"
		if [ -n "$mpoint" ]; then
			if [ "x$mpoint" = "x/" ]; then
				continue # this is the root for the running system
			fi
			mounted=1
		else
			# again, do not mount btrfs ro
			mount -t btrfs -o subvol="$subvol" -U "$UUID" "$tmpmnt"
			mpoint="$tmpmnt"
		fi
		test="/usr/libexec/os-probes/mounted/90linux-distro"
		if [ -f "$test" ] && [ -x "$test" ]; then
			debug "running subtest $test"
			if "$test" "$partition" "$mpoint" btrfs "UUID=$UUID" "subvol=$subvol"; then
				debug "os found by subtest $test on subvol $subvol"
				found=1
			fi
		fi
		if [ -z "$mounted" ]; then
			if ! umount "$tmpmnt"; then
			    warn "failed to umount $tmpmnt"
			fi
		fi
	done
	rmdir "$tmpmnt" || true
	if [ "$found" ]; then
		exit 0
	else
		exit 1
	fi
fi

if type grub-mount >/dev/null 2>&1 && \
   type grub2-probe >/dev/null 2>&1 && \
   grub-mount "$partition" "$tmpmnt" 2>/dev/null; then
	mounted=1
	type="$(grub2-probe -d "$partition" -t fs)" || true
	if [ "$type" ]; then
		debug "mounted using GRUB $type filesystem driver"
	else
		debug "mounted using GRUB, but unknown filesystem?"
		type=fuseblk
	fi
else
	ro_partition "$partition"
	for type in $types $delaytypes; do
		if mount -o ro -t "$type" "$partition" "$tmpmnt" 2>/dev/null; then
			debug "mounted as $type filesystem"
			mounted=1
			break
		fi
	done
fi

if [ "$mounted" ]; then
	for test in /usr/libexec/os-probes/mounted/*; do
		debug "running subtest $test"
		if [ -f "$test" ] && [ -x "$test" ]; then
			if "$test" "$partition" "$tmpmnt" "$type"; then
				debug "os found by subtest $test"
				if ! umount "$tmpmnt"; then
					warn "failed to umount $tmpmnt"
				fi
				rmdir "$tmpmnt" || true
				exit 0
			fi
		fi
	done
	if ! umount "$tmpmnt"; then
		warn "failed to umount $tmpmnt"
	fi
fi

rmdir "$tmpmnt" || true

# No tests found anything.
exit 1
